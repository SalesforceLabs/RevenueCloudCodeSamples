<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Calls the PlaceSalesTransaction invocable action to create a quote.</description>
        <name>CallPlaceSalesTransaction</name>
        <label>Call Place Sales Transaction</label>
        <locationX>314</locationX>
        <locationY>1598</locationY>
        <actionName>placeSalesTransaction</actionName>
        <actionType>placeSalesTransaction</actionType>
        <connector>
            <targetReference>SetSuccessMessage</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>graph</name>
            <value>
                <elementReference>PSTGraph</elementReference>
            </value>
        </inputParameters>
        <nameSegment>placeSalesTransaction</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <apiVersion>63.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <description>Creates a quote line item record reference that’s used within the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>CreateQuoteLineItemRecordReference</name>
        <label>Create Quote Line Item Record Reference</label>
        <locationX>314</locationX>
        <locationY>1082</locationY>
        <assignmentItems>
            <assignToReference>QuoteRecordReference.referenceId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetQuote.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>QuoteRecordReference.record.id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetQuote.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>QuoteRecordReference.record.type</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Quote</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>QuoteRecordReference.record.method</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>PATCH</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>QuoteLineRecordReference.referenceId</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>placeholder</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>QuoteLineRecordReference.record.type</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>QuoteLineItem</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>QuoteLineRecordReference.record.method</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>POST</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>QuoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>QuoteIdRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>QuoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>PricebookEntryRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>QuoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>ProductRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>QuoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>QuantityRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>QuoteRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>PricebookNameRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HaveProductType</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the values for the Graph Apex-defined type as an input to the PlaceSalesTransaction invocable action.</description>
        <name>SetGraphInput</name>
        <label>Set Graph Input</label>
        <locationX>314</locationX>
        <locationY>1490</locationY>
        <assignmentItems>
            <assignToReference>PSTGraph.graphId</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>placeholder</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>PSTGraph.records</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>QuoteRecordReference</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>PSTGraph.records</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>QuoteLineRecordReference</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CallPlaceSalesTransaction</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Uses the price book that’s assigned to the opportunity to price the quote line item.</description>
        <name>SetOpportunityPriceBook</name>
        <label>Set Opportunity Price Book</label>
        <locationX>314</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>PricebookId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetQuote.Opportunity.Pricebook2Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetProduct</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the fields on the quote by populating the record map wrappers. This element is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>SetQuoteFields</name>
        <label>Set Quote Fields</label>
        <locationX>314</locationX>
        <locationY>974</locationY>
        <assignmentItems>
            <assignToReference>QuoteIdRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>QuoteId</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>QuoteIdRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetQuote.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Product2Id</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ProductId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>PricebookEntryRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>PricebookEntryId</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>PricebookEntryRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetPriceBookEntry.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>QuantityRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Quantity</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>QuantityRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Quantity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>PricebookNameRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Pricebook2Id</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>PricebookNameRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>PricebookId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CreateQuoteLineItemRecordReference</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Uses the price book that’s assigned to the quote to price the quote line item.</description>
        <name>SetQuotePriceBook</name>
        <label>Set Quote Price Book</label>
        <locationX>50</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>PricebookId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetQuote.Pricebook2Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetProduct</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the start date and period boundary fields on the quote line item record for evergreen products.</description>
        <name>SetStartDateandPeriodBoundary</name>
        <label>Set Start Date and Period Boundary</label>
        <locationX>182</locationX>
        <locationY>1298</locationY>
        <assignmentItems>
            <assignToReference>StartDateRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>StartDate</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>StartDateRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>StartDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>QuoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>StartDateRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>PeriodBoundaryRecordMapWrapper.key</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>PeriodBoundary</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>PeriodBoundaryRecordMapWrapper.obj</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Anniversary</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>QuoteLineRecordReference.record.fieldValues</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>PeriodBoundaryRecordMapWrapper</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SetGraphInput</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Shows a message to indicate that the quote line item was successfully added to the quote.</description>
        <name>SetSuccessMessage</name>
        <label>Set Success Message</label>
        <locationX>314</locationX>
        <locationY>1706</locationY>
        <assignmentItems>
            <assignToReference>SetOutputMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>OutputMessage</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <description>Determines what information is needed to add to the quote by checking whether the product record specifies a product type.</description>
        <name>HaveProductType</name>
        <label>Have Product Type?</label>
        <locationX>314</locationX>
        <locationY>1190</locationY>
        <defaultConnector>
            <targetReference>SetGraphInput</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Evergreen Product (No)</defaultConnectorLabel>
        <rules>
            <name>IsEvergreenProduct</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetProductSellingModel.SellingModelType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Evergreen</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetStartDateandPeriodBoundary</targetReference>
            </connector>
            <label>Is Evergreen Product</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether a price book is assigned to a quote or an opportunity that can be applied to the quote line item. If no price book is assigned, then the flow uses the standard price book.</description>
        <name>HaveQuotePriceBook</name>
        <label>HaveQuotePriceBook?</label>
        <locationX>314</locationX>
        <locationY>242</locationY>
        <defaultConnector>
            <targetReference>GetStandardPriceBook</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NoPriceBookSet (Default)</defaultConnectorLabel>
        <rules>
            <name>QuoteHasPriceBook</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetQuote.Pricebook2Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetQuotePriceBook</targetReference>
            </connector>
            <label>PriceBookOnQuote</label>
        </rules>
        <rules>
            <name>OpportunityHasPriceBook</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetQuote.Opportunity.Pricebook2Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetOpportunityPriceBook</targetReference>
            </connector>
            <label>PriceBookOnOpportunity</label>
        </rules>
    </decisions>
    <description>Creates a quote line item record and adds it to a quote.</description>
    <environments>Default</environments>
    <formulas>
        <description>Calculate current date, the format is yyyy-mm-dd. If no StartDate input, the CurrentStartDate will be used in QuoteLineItem.</description>
        <name>CurrentStartDate</name>
        <dataType>String</dataType>
        <expression>TEXT(Year({!$Flow.CurrentDate})) + &quot;-&quot; + TEXT(Month({!$Flow.CurrentDate})) + &quot;-&quot; + TEXT(Day({!$Flow.CurrentDate}))</expression>
    </formulas>
    <formulas>
        <description>Defines the content of the output message using the quote line item and the updated subtotal for the quote.</description>
        <name>OutputMessage</name>
        <dataType>String</dataType>
        <expression>&quot;Quote Line Item Added to &quot; + {!GetQuote.Name} + &quot;.&quot;</expression>
    </formulas>
    <interviewLabel>Add QuoteLineItem to Quote {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Add QuoteLineItem to Quote Feedback</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Gets the default product selling model option specified for the product record so it can be used for the quote line item</description>
        <name>GetDefaultPSMOption</name>
        <label>Get Default Product Selling Model Option</label>
        <locationX>314</locationX>
        <locationY>650</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetProductSellingModel</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Product2Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetProduct.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsDefault</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ProductSellingModelOption</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the price book entry that’s associated with the product and the product selling model.</description>
        <name>GetPriceBookEntry</name>
        <label>Get Price Book Entry</label>
        <locationX>314</locationX>
        <locationY>866</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SetQuoteFields</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Pricebook2Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>PricebookId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Product2Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ProductId</elementReference>
            </value>
        </filters>
        <filters>
            <field>ProductSellingModelId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetProductSellingModel.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PricebookEntry</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the product record from the input Product2 ID.</description>
        <name>GetProduct</name>
        <label>Get Product</label>
        <locationX>314</locationX>
        <locationY>542</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetDefaultPSMOption</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ProductId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Product2</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the product selling model that’s associated with the default product selling model option</description>
        <name>GetProductSellingModel</name>
        <label>Get Product Selling Model</label>
        <locationX>314</locationX>
        <locationY>758</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetPriceBookEntry</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetDefaultPSMOption.ProductSellingModelId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ProductSellingModel</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the quote record from the input quote ID</description>
        <name>GetQuote</name>
        <label>GetQuote</label>
        <locationX>314</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>HaveQuotePriceBook</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>QuoteId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Quote</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>If a price book isn’t specified for either the quote or the opportunity, the flow uses the standard price book.</description>
        <name>GetStandardPriceBook</name>
        <label>Get Standard Price Book</label>
        <locationX>578</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetProduct</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsStandard</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Pricebook2</object>
        <outputAssignments>
            <assignToReference>PricebookId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetQuote</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <description>Sets the record map wrapper Apex-defined type that specifies the QuoteLineItem.PeriodBoundary field name (key) and value (object) for the quote. This variable is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>PeriodBoundaryRecordMapWrapper</name>
        <apexClass>RevSalesTrxn__RecordMapWrapper</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Sets the record map wrapper Apex-defined type that specifies the QuoteLineItem.PricebookEntry field name (key) and value (object) for the quote. This variable is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>PricebookEntryRecordMapWrapper</name>
        <apexClass>RevSalesTrxn__RecordMapWrapper</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the ID of the price book record that’s used to add a quote line item to the quote. If a price book isn’t specified on the quote or the opportunity, then the flow uses the standard pricebook as a default.</description>
        <name>PricebookId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Sets the record map wrapper Apex-defined type that specifies the QuoteLineItem.Pricebook2Id field name (key) and value (object) for the quote. This variable is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>PricebookNameRecordMapWrapper</name>
        <apexClass>RevSalesTrxn__RecordMapWrapper</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the ID of the Product2 record that the flow adds to the quote</description>
        <name>ProductId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Sets the record map wrapper Apex-defined type that specifies the QuoteLineItem.Product2 field name (key) and value (object) for the quote. This variable is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>ProductRecordMapWrapper</name>
        <apexClass>RevSalesTrxn__RecordMapWrapper</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Sets values for the Graph Apex-defined type that’s used as an input for the PlaceSalesTransaction invocable action.</description>
        <name>PSTGraph</name>
        <apexClass>RevSalesTrxn__Graph</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the quantity of the product that the flow adds to the quote line item. If no quantity is specified, the flow uses the default of 1.</description>
        <name>Quantity</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>1.0</numberValue>
        </value>
    </variables>
    <variables>
        <description>Sets the record map wrapper Apex-defined type that specifies the QuoteLineItem.PricebookEntry field name (key) and value (object) for the quote. This variable is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>QuantityRecordMapWrapper</name>
        <apexClass>RevSalesTrxn__RecordMapWrapper</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the ID of the quote record that this flow modifies.</description>
        <name>QuoteId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Sets the record map wrapper Apex-defined type that specifies the QuoteLineItem.QuoteId field name (key) and value (object) for the quote. This variable is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>QuoteIdRecordMapWrapper</name>
        <apexClass>RevSalesTrxn__RecordMapWrapper</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Sets the record reference for the quote line item that this flow creates. This variable is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>QuoteLineRecordReference</name>
        <apexClass>RevSalesTrxn__RecordReference</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Sets the record reference for the quote that this flow modifies.This variable is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>QuoteRecordReference</name>
        <apexClass>RevSalesTrxn__RecordReference</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Shows a message to indicate that the quote line item was successfully added to the quote.</description>
        <name>SetOutputMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores the startDate for subscription products. Optional user input. The format must be yyyy-mm-dd.</description>
        <name>StartDate</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>CurrentStartDate</elementReference>
        </value>
    </variables>
    <variables>
        <description>Sets the record map wrapper Apex-defined type that specifies the QuoteLineItem.StartDate field name (key) and value (object) for the quote. This variable is used to construct the Graph Apex-defined type input for the PlaceSalesTransaction invocable action.</description>
        <name>StartDateRecordMapWrapper</name>
        <apexClass>RevSalesTrxn__RecordMapWrapper</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
